/*
Copyright(c) 2011 Company Name
*/
Ext.define("oop.InitProps",{constructor:function(a){if(a){Ext.apply(this,a)}},applyProps:function(a,b){return[Ext.applyIf(a,b||{})]}});Ext.define("eventbus.EventBus",{statics:{events:{},defineEvent:function(a){this.events[a]=[]},publish:function(a,d){if(this.events.hasOwnProperty(a)){for(var b=0;b<this.events[a].length;b++){var c=this.events[a][b];c.callback.call(c.subscriber,d)}}},subscribe:function(a,c,b){if(this.events.hasOwnProperty(a)){this.events[a].push({subscriber:b,callback:c})}}}});Ext.define("soundeffects.SoundEffects",{statics:{sounds:{},defineSounds:function(a){var b=this;this.sounds=Ext.apply(this.sounds,a);window.soundManager.onready(function(){b.loadSounds()})},loadSounds:function(){for(var a in this.sounds){if(this.sounds.hasOwnProperty(a)){window.soundManager.createSound({id:a,url:this.sounds[a]})}}},play:function(b,a){if(this.sounds[b]){if(a){window.soundManager.play(b,a)}else{window.soundManager.play(b)}}}}});Ext.define("controller.Keyboard",{extend:"oop.InitProps",statics:{keys:{16:"shift",17:"ctrl",18:"alt",32:"space",19:"pause",37:"left",38:"up",39:"right",40:"down"},getKey:function(c){var a=c||event;var b=this.keys[a.keyCode];return b||""}},context:window,keyUp:Ext.emptyFn,keyPress:Ext.emptyFn,constructor:function(a){this.callParent([a]);document.onkeydown=Ext.Function.bind(this.onKeyPress,this);document.onkeyup=Ext.Function.bind(this.onKeyUp,this)},onKeyPress:function(b){var a=this.self.getKey(b);this.keyPress.call(this.context,a)},onKeyUp:function(b){var a=this.self.getKey(b);this.keyUp.call(this.context,a)}});Ext.define("interactive.Draggable",{onStartDrag:function(b,a){if(b){this.startdrag=Ext.Function.bind(b,a)}},noStartDrag:function(){this.startdrag=null},onDrag:function(b,a){if(b){this.drag=Ext.Function.bind(b,a)}},noDrag:function(){this.drag=null},onEndDrag:function(b,a){if(b){this.enddrag=Ext.Function.bind(b,a)}},noEndDrag:function(){this.enddrag=null}});Ext.define("interactive.Drag",{extend:"oop.InitProps",constructor:function(a){this.callParent(this.applyProps(a,{}))},dragTo:function(a,b){this.end.x=a;this.end.y=b},getOffsetX:function(){return this.end.x-this.start.x},getOffsetY:function(){return this.end.y-this.start.y},distance:function(){var b=this.getOffsetX();var a=this.getOffsetY();return Math.sqrt(b*b+a*a)}});Ext.define("geometry.Point",{extend:"oop.InitProps",constructor:function(a){this.callParent([Ext.applyIf(a,{x:0,y:0})])}});Ext.define("geometry.Line",{extend:"geometry.Point",constructor:function(a){this.callParent([Ext.applyIf(a,{start:new geometry.Point({x:0,y:0}),end:new geometry.Point({x:100,y:100})})])},length:function(){var b=this.end.x-this.start.x;var a=this.end.y-this.start.y;return Math.sqrt(b*b+a*a)}});Ext.define("drawable.Drawable",{initDrawable:function(a){if(!a.ctx){throw new Error("Sprite requires a context property")}this.ctx=a.ctx},beforeDraw:function(){this.ctx.save();this.ctx.translate(this.x,this.y);if(this.strokeStyle){this.ctx.strokeStyle=this.strokeStyle}if(this.fillStyle){this.ctx.fillStyle=this.fillStyle}if(this.rotation&&this.rotation){this.ctx.rotate(this.rotation)}},draw:function(){this.beforeDraw();var b=this.getPoint(0);var a=this.points.slice(1);this.ctx.beginPath();this.ctx.moveTo(b.x,b.y);Ext.Array.forEach(a,function(e,d,c){this.ctx.lineTo(e.x,e.y)},this);this.ctx.closePath();this.ctx.stroke();this.afterDraw()},afterDraw:function(){this.ctx.restore()}});Ext.namespace("canvasutils");(function(){var a="none";var c;var d,e;d=document.createElement("canvas");if(d&&d.getContext){e=d.getContext("2d");e.save();e.translate(10,10);e.rect(0,0,10,10);if(e.isPointInPath(5,5)){a="local"}else{if(e.isPointInPath(15,15)){a="global"}}c=function(){if(a==="global"){return function(h,g,i){return h.isPointInPath(g,i)}}else{if(a==="local"){return function(i,h,k,j,g){return i.isPointInPath(h-j,k-g)}}}}()}function f(o,r,p){var g=false;var n=r.points,m=p.points;var q,l;o.save();o.translate(r.x,r.y);o.beginPath();o.moveTo(n[0].x,n[0].y);for(var k=1;k<n.length;k++){q=n[k];o.lineTo(q.x,q.y)}o.closePath();for(var h=0;h<m.length;h++){l=m[h];if(c(o,p.x+l.x,p.y+l.y,r.x,r.y)){g=true;break}}o.restore();return g}function b(i,h,g){return f(i,h,g)||f(i,g,h)}Ext.define("canvasutils.CanvasUtils",{statics:{isPointInPath:c,polygonsIntersect:b}})})();Ext.define("collection.Collection",{add:function(a){if(Ext.isArray(a)){Ext.Array.forEach(a,function(b){Ext.Array.include(this.items,b)},this)}else{Ext.Array.include(this.items,a)}},remove:function(a){if(Ext.isArray(a)){Ext.Array.forEach(a,function(b){Ext.Array.remove(this.items,b)},this)}else{Ext.Array.remove(this.items,a)}},contains:function(a){return Ext.Array.contains(this.items,a)},forEach:function(b,a){Ext.Array.forEach(this.items,b,a||this)},query:function(a){return Ext.Array.filter(this.items,function(c){var b=false;for(var d in a){if(a.hasOwnProperty(d)){if(c[d]&&c[d]===a[d]){b=true}else{b=false;break}}}return b})},asArray:function(){return Ext.Array.clone(this.items)}});Ext.define("collision.Collision",{requires:["canvasutils.CanvasUtils"],containsPoint:function(b,e){var a;this.ctx.save();this.ctx.translate(this.x,this.y);this.ctx.beginPath();this.ctx.moveTo(this.points[0].x,this.points[0].y);for(var c=0;c<this.points.length;c++){var d=this.points[c];this.ctx.lineTo(d.x,d.y)}this.ctx.closePath();a=canvasutils.CanvasUtils.isPointInPath(this.ctx,b,e,this.x,this.y);this.ctx.restore();return a},intersects:function(a){return canvasutils.CanvasUtils.polygonsIntersect(this.ctx,this,a)}});Ext.define("interactive.Clickable",{onClick:function(b,a){if(b){this.click=Ext.Function.bind(b,a)}},noClick:function(){this.click=null}});Ext.define("motion.Velocity",{setVelocity:function(b,a,c){this.vx=b;this.vy=a;if(c!==undefined){this.av=c}},move:function(){this.x+=this.vx;this.y+=this.vy;if(this.av){this.rotation+=this.av}}});Ext.define("geometry.Path",{extend:"geometry.Point",constructor:function(a){this.callParent(this.applyProps(a,{points:[]}))},addPoint:function(a){this.points.push(a)},getPoint:function(a){return this.points[a]},clearPoints:function(){this.points=[]},setPointsFromArray:function(a){this.clearPoints();Ext.Array.forEach(a,function(b){this.addPoint(new geometry.Point({x:b.x,y:b.y}))},this)}});Ext.define("drawable.DrawableLine",{extend:"geometry.Line",mixins:["drawable.Drawable"],constructor:function(a){this.callParent([a]);this.initDrawable(this.context)},draw:function(a){this.beforeDraw(a);this.ctx.beginPath();this.ctx.moveTo(this.start.x,this.start.y);this.ctx.lineTo(this.end.x,this.end.y);this.ctx.stroke();this.afterDraw(a)}});Ext.define("geometry.Shape",{extend:"geometry.Path",requires:["canvasutils.CanvasUtils"],constructor:function(a){this.callParent([Ext.applyIf(a,{rotation:0,scale:1})])},});Ext.define("sprites.Sprite",{extend:"geometry.Shape",mixins:["motion.Velocity","drawable.Drawable","collision.Collision"],constructor:function(a){this.callParent([a]);this.initDrawable(this.context)}});(function(){var b=Math.PI*2;var a=function(c){return Math.random()*c};Ext.define("sprites.Rock",{extend:"sprites.Sprite",requires:["canvasutils.CanvasUtils"],constructor:function(c){this.callParent([Ext.applyIf(c,{active:true,size:3})]);this.init(c)},init:function(i){var f=i.parent;this.clearPoints();this.size=i.size;if(this.size===3){this.num_points=16;this.radius=60}else{if(this.size===2){this.num_points=12;this.radius=30}else{if(this.size===1){this.num_points=6;this.radius=8}else{}}}var e=this.radius*0.7;var d=this.radius*0.3;this.ang_incr=b/this.num_points;var g=0;for(var h=0;h<this.num_points;h++){g+=this.ang_incr;var c=e+a(d);this.addPoint({x:c*Math.cos(g),y:c*Math.sin(g)})}if(f){this.bearing=(f.bearing+a(b))/2;this.vx=(f.vx+i.speed)*Math.cos(this.bearing);this.vy=(f.vy+i.speed)*Math.sin(this.bearing)}else{this.bearing=a(b);this.vx=i.speed*Math.cos(this.bearing);this.vy=i.speed*Math.sin(this.bearing)}},update:function(){this.move();this.checkWrap()},checkWrap:function(){var c=this.radius;var e=this.context.canvas_width;var d=this.context.canvas_height;if(this.x>e+c){this.x=-c}else{if(this.x<-c){this.x=e+c}}if(this.y>d+c){this.y=-c}else{if(this.y<-c){this.y=d+c}}}})})();Ext.define("sprites.ShipFragment",{extend:"sprites.Sprite",constructor:function(a){this.callParent([Ext.applyIf(a,{strokeStyle:"#FF0000"})])},update:function(){this.move()},draw:function(){this.beforeDraw();this.ctx.save();this.ctx.translate(0,-this.length/2);this.ctx.beginPath();this.ctx.moveTo(0,0);this.ctx.lineTo(0,this.length);this.ctx.restore();this.ctx.stroke();this.afterDraw()}});Ext.define("geometry.Square",{extend:"geometry.Shape",requires:["geometry.Point"],constructor:function(a){this.callParent([Ext.applyIf(a,{width:100,height:100})]);this.setPointsFromArray([{x:0,y:0},{x:this.width,y:0},{x:this.width,y:this.height},{x:0,y:this.height}])}});Ext.define("drawable.DrawableSquare",{extend:"geometry.Square",mixins:["drawable.Drawable"],constructor:function(a){this.callParent([Ext.applyIf(a,{fillStyle:"",strokeStyle:"#FF0000",context:null})]);this.initDrawable(this.context)},draw:function(){this.beforeDraw();if(this.fillStyle){this.ctx.fillRect(0,0,this.width,this.height)}if(this.strokeStyle){this.ctx.strokeRect(0,0,this.width,this.height)}this.afterDraw()}});Ext.define("ui.Component",{extend:"drawable.DrawableSquare",mixins:["collision.Collision","interactive.Clickable"],constructor:function(a){this.callParent(this.applyProps(a,{active:true,clickable:true}))}});Ext.define("controller.TouchPad",{extend:"ui.Component",requires:["interactive.Drag","geometry.Point"],mixins:["interactive.Draggable"],constructor:function(b){this.callParent(this.applyProps(b,{strokeStyle:"",width:200,height:200,drags:{},multiTouch:true,singleTouchId:"",touching:false,touches:0}));var a=this;this.onStartDrag(function(c,e,d){if(!a.multitouch){if(a.touching){return}else{a.singleTouchId=d}}a.drags[d]=new interactive.Drag({start:new geometry.Point({x:c,y:e}),end:new geometry.Point({x:c,y:e})});a.touches+=1;a.touching=true;if(a.touch){a.touch("start",c,e,d,a.drags[d])}});this.onDrag(function(c,e,d){if(!a.multitouch&&a.singleTouchId!==d){return}a.drags[d].dragTo(c,e);if(a.touch){a.touch("drag",c,e,d,a.drags[d])}});this.onEndDrag(function(c,e,d){delete a.drags[d];if(!a.multitouch){a.singleTouchId="";a.touching=false}else{a.touches-=1;if(a.touches===0){a.touching=false}}if(a.touch){a.touch("end",c,e,d)}})},onTouch:function(b,a){if(b){this.touch=Ext.Function.bind(b,a)}}});Ext.define("ui.Button",{extend:"ui.Component",constructor:function(a){this.callParent(this.applyProps(a,{text:"Button"}))},draw:function(){this.beforeDraw();var a=this.ctx.measureText(this.text);this.ctx.textAlign="left";this.ctx.textBaseline="middle";this.ctx.fillStyle="#00FF00";this.ctx.fillText(this.text,(this.width-a.width)/2,(this.height)/2);this.ctx.beginPath();this.ctx.rect(0,0,this.width,this.height);this.ctx.stroke();this.afterDraw()}});Ext.define("sprites.Point",{extend:"drawable.DrawableSquare",mixins:["motion.Velocity","collision.Collision"],constructor:function(a){this.callParent([a])}});Ext.define("sprites.Bullet",{extend:"sprites.Point",requires:["eventbus.EventBus"],constructor:function(a){this.callParent([Ext.applyIf(a,{width:2,height:2,dx:0,dy:0,vx:0,vy:0})])},update:function(){var a=this.context.width;var b=this.context.height;this.move();this.dx+=Math.abs(this.vx);this.dy+=Math.abs(this.vy);if(this.dx>a*0.6||this.dy>b*0.6){eventbus.EventBus.publish("bulletExpired",this);return}if(this.x<0){this.x+=a}else{if(this.x>a){this.x-=a}}if(this.y<0){this.y+=b}else{if(this.y>b){this.y-=b}}}});(function(){var e=Math.PI*2;var b=function(h){return Math.random()*h};var c=30;var g=1;var f;var a=25;var d=15;Ext.define("sprites.Ship",{extend:"sprites.Sprite",requires:["sprites.Bullet"],constructor:function(h){this.callParent([Ext.applyIf(h,{active:true})]);this.height=25;this.width=15;this.baseAngle=Math.atan2(this.height,this.width/2);this.setPointsFromArray([Ext.create("geometry.Point",{x:-this.width/2,y:this.height/2}),Ext.create("geometry.Point",{x:0,y:-this.height/2}),Ext.create("geometry.Point",{x:this.width/2,y:this.height/2})])},init:function(){this.x=this.context.canvas_width/2;this.y=this.context.canvas_height/2;this.turn_speed=e/60;this.rotation=0;this.rv=0;this.setVelocity(0,0);this.acc=0;this.mass=5;this.force=0;this.friction=0.998;this.thrust=false},reset:function(){this.init()},rotate:function(h){this.rv=h*this.turn_speed},turnRight:function(){this.rotate(1)},turnLeft:function(){this.rotate(-1)},stopTurningRight:function(){if(this.rv>0){this.rotate(0)}},stopTurningLeft:function(){if(this.rv<0){this.rotate(0)}},stopTurning:function(){this.rotate(0)},startThrust:function(){this.thrust=true;this.force=-1.1},setThrust:function(h){this.thrust=true;this.force=h},stopThrust:function(){this.thrust=false;this.force=0},rotateBy:function(h){this.rotation+=h},update:function(){var k,h,n,m;var l=5;this.rotation=this.rotation+this.rv;var j=this.context.canvas_width;var i=this.context.canvas_height;if(this.thrust){k=this.force/this.mass;h=this.rotation+Math.PI/2;n=k*Math.cos(h);m=k*Math.sin(h);this.vx+=n;this.vy+=m}if(this.x<0){this.x+=j}else{if(this.x>j){this.x-=j}}if(this.y<0){this.y+=i}else{if(this.y>i){this.y-=i}}if(this.vx>d){this.vx=d}else{if(this.vx<-d){this.vx=-d}}if(this.vy>d){this.vy=d}else{if(this.vy<-d){this.vy=-d}}this.move();if(this.exploding){this.animateExplosion()}}})}());Ext.define("geometry.Plane",{extend:"geometry.Square",constructor:function(a){this.callParent(this.applyProps(a,{wrap:false}))}});Ext.define("canvasutils.Context2D",{extend:"geometry.Plane",constructor:function(a){this.callParent(this.applyProps(a,{canvasId:"canvas",bg:"#000000",strokeStyle:"#00FF00",fillStyle:"#FF0000",fullscreen:true}));this.canvas=document.getElementById(this.canvasId);this.ctx=this.canvas.getContext("2d");this.resize();this.reset()},resize:function(){if(this.fullscreen){this.canvas_width=document.documentElement.clientWidth;this.canvas_height=document.documentElement.clientHeight}this.width=this.canvas_width;this.height=this.canvas_height;this.canvas.setAttribute("width",this.canvas_width);this.canvas.setAttribute("height",this.canvas_height)},reset:function(){this.ctx.fillRect(0,0,this.canvas_width,this.canvas_height);this.ctx.strokeStyle="#00FF00";this.ctx.font="24px Verdana,Arial,sans-serif"},applyStroke:function(a){this.ctx.strokeStyle=a},applyFill:function(a){this.ctx.fillStyle=a}});Ext.define("drawable.Layer",{extend:"canvasutils.Context2D",mixins:["collection.Collection"],constructor:function(a){this.callParent(this.applyProps(a,{items:[]}))},update:function(){this.forEach(function(a){if(a.active===false){return}if(a.update){a.update()}})},render:function(){var a;for(var b=0;b<this.items.length;b++){a=this.items[b];if(a.active===false){continue}else{a.draw()}}}});Ext.define("interactive.ClickableLayer",{extend:"drawable.Layer",constructor:function(c){this.callParent([c]);var b=this;var a=this.canvas;this.canvas.addEventListener("click",Ext.Function.bind(this.onClick,this),false);this.canvas.addEventListener("click",function(d){b.handleEvent("click",d)},false)},onClick:function(a){this.handleEvent("click",a)},handleEvent:function(c,b){var a=event.clientX-this.canvas.offsetLeft;var d=event.clientY-this.canvas.offsetTop;this.items.forEach(function(e){if(e.active&&e[c]){if(e.containsPoint(a,d)){e[c](a-e.x,d-e.y)}}})}});Ext.define("interactive.DraggableLayer",{extend:"interactive.ClickableLayer",mixins:["interactive.Draggable"],constructor:function(c){this.callParent([c]);var b=this;this.dragging=false;function a(e){var d;if(e.changedTouches){d=e.changedTouches[0];d.type=e.type}return d||e}this.canvas.addEventListener("touchstart",function(d){b._mousedown(a(d))},false);this.canvas.addEventListener("touchmove",function(d){d.preventDefault();b._mousemove(a(d))},false);this.canvas.addEventListener("touchend",function(d){b._mouseup(a(d))},false);this.canvas.addEventListener("mousedown",Ext.Function.bind(this._mousedown,this),false)},_mousedown:function(a){if(a.type==="touchstart"){this.canvas.removeEventListener("mousedown",Ext.Function.bind(this._mousedown,this),false)}if(a.type==="mousedown"){this.dragging=true;this.canvas.addEventListener("mousemove",Ext.Function.bind(this._mousemove,this),false);this.canvas.addEventListener("mouseup",Ext.Function.bind(this._mouseup,this),false)}this._startdrag(a)},_mousemove:function(a){if(a.type==="touchmove"){this._drag(a)}else{if(a.type==="mousemove"&&this.dragging){this._drag(a)}}},_mouseup:function(a){if(a.type==="touchend"){this._enddrag(a)}else{if(a.type==="mouseup"&&this.dragging){this._enddrag(a);this.dragging=false;this.canvas.removeEventListener("mousemove",Ext.Function.bind(this._mousemove,this),false);this.canvas.removeEventListener("mouseup",Ext.Function.bind(this._mouseup,this),false)}}},_startdrag:function(a){this.handleEvent("startdrag",a)},_drag:function(a){this.handleEvent("drag",a)},_enddrag:function(a){this.handleEvent("enddrag",a)},handleEvent:function(c,b){var a=b.clientX-this.canvas.offsetLeft;var d=b.clientY-this.canvas.offsetTop;this.items.forEach(function(e){if(e.active&&e[c]){if(e.containsPoint(a,d)){e[c](a-e.x,d-e.y,b.identifier||"single")}}});if(this[c]){this[c](a-this.x,d-this.y)}}});(function(){var f=Math.PI*2;var b=function(i){return Math.random()*i};var d=function(i){return i*f/180};var c=30;var h=1;var g;var a=25;var e=15;Ext.define("Asteroids",{extend:"oop.InitProps",requires:["eventbus.EventBus","controller.TouchPad","drawable.DrawableLine","soundeffects.SoundEffects","sprites.Rock","sprites.Ship","sprites.ShipFragment","sprites.Bullet","drawable.Layer","controller.Keyboard","ui.Button","interactive.DraggableLayer"],constructor:function(j){this.callParent([j]);this.rocks=[];this.bullets=[];var i=this;window.onresize=function(){var k;if(k){clearInterval(k)}k=setTimeout(function(){i.state("resize")},200)};this.gameLayer=new interactive.DraggableLayer({x:0,y:0,fullscreen:true,canvasId:this.canvasId,stroke:this.stroke});this.keyboard=new controller.Keyboard({context:this,keyPress:this.onKeyPress,keyUp:this.onKeyUp});this.touchPad=new controller.TouchPad({context:this.gameLayer,x:0,y:0,width:this.gameLayer.canvas_width,height:this.gameLayer.canvas_height,touch:Ext.Function.bind(this.onTouch,this),multiTouch:false});this.gameLayer.add(this.touchPad);this.ship=new sprites.Ship({active:false,context:this.gameLayer,strokeStyle:"#FF0000"});this.gameLayer.add(this.ship);eventbus.EventBus.defineEvent("bulletExpired");eventbus.EventBus.subscribe("bulletExpired",this.onBulletExpired,this);this.startButton=new ui.Button({text:"Play",width:120,height:40,x:this.gameLayer.width/2-100,y:this.gameLayer.height/2-20,active:false,context:this.gameLayer});this.gameLayer.add(this.startButton);soundeffects.SoundEffects.defineSounds({laser:"../../lib/sounds/laser.mp3",rock_explode:"../../lib/sounds/explode.mp3",thrust:"../../lib/sounds/thrust.mp3",boom:"../../lib/sounds/boom.mp3",asteroids_loop:"../../lib/sounds/asteroids_loop.mp3"});this.sfx=soundeffects.SoundEffects},onTouch:function(j,i,n,m,l){var k=this;if(j==="start"){this.thrustTimeout=setTimeout(function(){k.thrustVector=l;k.state("dragstart")},250)}if(j==="drag"){this.state("drag")}if(j==="end"){if(this.thrustTimeout){clearTimeout(this.thrustTimeout);this.state("click")}this.thrustVector=null;this.thrustTimeout=null;this.state("dragend")}},startLevel:function(){this.makeRocks();this.changeState(this.PLAY)},changeState:function(i){if(this.state){this.state("exit")}this.state=i;this.state("enter")},stopTimer:function(){if(g){clearInterval(g)}g=null},coastIsClear:function(){var l,j,k,i,m=100;for(i=0;i<this.rocks.length;i++){k=this.rocks[i];if(!k.active){continue}l=k.x;j=k.y;if(l>this.ship.x-m&&l<this.ship.x+m&&j>this.ship.y-m&&j<this.ship.y+m){return false}}return true},addRock:function(i){this.rocks.push(i);this.gameLayer.add(i)},removeRock:function(i){Ext.Array.remove(this.rocks,i);this.gameLayer.remove(i)},removeAllRocks:function(){Ext.Array.forEach(this.rocks,function(i){this.removeRock(i)},this)},makeRocks:function(){var k,j,i=Math.round(h*0.25*24);this.removeAllRocks();for(j=0;j<i;j++){k=new sprites.Rock({strokeStyle:"#00FF00",context:this.gameLayer,x:b(this.gameLayer.canvas_width),y:b(this.gameLayer.canvas_height),size:3,speed:1});if(this.ship&&this.state===this.START_LEVEL&&k.intersects(this.ship)){i++;continue}this.addRock(k)}},start:function(){this.changeState(this.START_GAME)},onBulletExpired:function(i){this.removeBullet(i)},addBullet:function(i){this.bullets.push(i);this.gameLayer.add(i)},removeBullet:function(i){Ext.Array.remove(this.bullets,i);this.gameLayer.remove(i)},removeAllBullets:function(){Ext.Array.forEach(this.bullets,function(i){this.removeBullet(i)},this)},fireBullet:function(){var k=8;var j=this.ship.rotation-Math.PI/2;var i=this.ship.height/2;this.addBullet(new sprites.Bullet({dx:0,dy:0,x:this.ship.x+i*Math.cos(j),y:this.ship.y+i*Math.sin(j),vx:this.ship.vx+k*Math.cos(j),vy:this.ship.vy+k*Math.sin(j),context:this.gameLayer}));this.sfx.play("laser")},bulletHitRock:function(m){var k,j,l;j=this.gameLayer.ctx;for(l=0;l<this.bullets.length;l++){k=this.bullets[l];if(m.containsPoint(k.x,k.y)){this.removeBullet(k);return true}}return false},explodeRock:function(m){var l,j,k;if(m.size>1){for(k=0;k<3;k++){this.addRock(new sprites.Rock({context:this.gameLayer,x:m.x,y:m.y,size:m.size-1,speed:b(3),parent:m}))}}this.removeRock(m);this.sfx.play("rock_explode")},hitRock:function(j,k){var i=j.height+k.radius;if(Math.abs(j.x-k.x)>i||Math.abs(j.y-k.y)>i){return false}else{return j.intersects(k)}},rocksLeft:function(){return this.rocks.length>0},bulletsLeft:function(){return this.bullets.length>0},startTimer:function(){var i=this;if(!g){g=setInterval(function(){i.state("tick")},1000/c)}},resize:function(){this.gameLayer.resize();this.startButton.x=this.gameLayer.canvas_width/2-this.startButton.width/2;this.startButton.y=this.gameLayer.canvas_height/2-this.startButton.height/2;this.touchPad.width=this.gameLayer.canvas_width;this.touchPad.height=this.gameLayer.canvas_height},reset:function(){this.gameLayer.reset()},explodeShip:function(i){this.ship.active=false;this.shipFragments=[new sprites.ShipFragment({x:i.x+i.points[0].x,y:i.y+i.points[0].y,av:b(0.05)-b(0.025),rotation:Math.atan2(i.points[1].y,i.points[1].x),length:Math.sqrt((i.width/2)*(i.width/2)+i.height*i.height),vx:b(2)-Math.random(),vy:b(2)-Math.random(),context:this.gameLayer}),new sprites.ShipFragment({x:i.x+i.points[1].x,y:i.y+i.points[1].y,av:b(0.05)-b(0.025),rotation:Math.atan2(i.points[2].y,i.points[2].x),length:Math.sqrt((i.width/2)*(i.width/2)+i.height*i.height),vx:b(2)-Math.random(),vy:b(2)-Math.random(),context:this.gameLayer}),new sprites.ShipFragment({x:i.x+i.points[0].x,y:i.y+i.points[0].y,av:b(0.05)-b(0.025),rotation:0,length:i.width,vx:b(2)-Math.random(),vy:b(2)-Math.random(),context:this.gameLayer})];this.gameLayer.add(this.shipFragments);this.sfx.play("boom")},onKeyPress:function(i){switch(i){case"left":this.state("left_keypress");break;case"right":this.state("right_keypress");break;case"up":this.state("up_keypress");break;case"space":this.state("spacebar");break;default:}},onKeyUp:function(i){switch(i){case"left":this.state("left_keyup");break;case"right":this.state("right_keyup");break;case"up":this.state("up_keyup");break;default:}},BASE:function(i){switch(i){case"resize":this.resize();this.reset();break;default:}},INTERACTIVE:function(j){var i;switch(j){case"right_keypress":this.ship.turnRight();break;case"left_keypress":this.ship.turnLeft();break;case"left_keyup":this.ship.stopTurningLeft();break;case"right_keyup":this.ship.stopTurningRight();break;case"up_keypress":this.ship.startThrust();this.sfx.play("thrust");break;case"up_keyup":this.ship.stopThrust();break;case"spacebar":this.fireBullet();break;case"click":this.fireBullet();break;case"dragstart":this.ship.stopTurning();this.prevDragOffsetX=0;break;case"drag":if(this.thrustVector){if(Math.abs(this.thrustVector.getOffsetX())>Math.abs(this.thrustVector.getOffsetY())){this.ship.rotation+=d((this.thrustVector.getOffsetX()-this.prevDragOffsetX)*0.3);this.prevDragOffsetX=this.thrustVector.getOffsetX()}else{i=-1*this.thrustVector.getOffsetY()/200;if(i<0){i=0}if(i>1.1){i=1.1}this.ship.setThrust(-1*i)}}break;case"dragend":this.ship.stopThrust();break;default:this.BASE(j)}},START_GAME:function(j){var i=this;this.startButton.active=true;this.startButton.onClick(function(){this.changeState(this.START_LIFE)},this);switch(j){case"enter":this.makeRocks();this.startTimer();break;case"tick":this.reset();this.gameLayer.update();this.gameLayer.render();break;case"exit":break;default:this.BASE(j)}},END_LEVEL:function(j){var i=this;switch(j){case"enter":setTimeout(function(){i.startLevel()},5000);this.startTimer();break;case"tick":this.reset();this.gameLayer.update();this.gameLayer.render();break;case"exit":break;default:this.INTERACTIVE(j)}},START_LIFE:function(i){switch(i){case"enter":this.startButton.active=false;this.ship.init();this.startTimer();break;case"tick":this.reset();this.gameLayer.update();this.gameLayer.render();if(this.coastIsClear()){this.changeState(this.PLAY)}break;case"exit":break;default:this.BASE(i)}},PLAY:function(k){var i;switch(k){case"enter":this.ship.active=true;this.startTimer();break;case"tick":this.reset();this.gameLayer.update();for(i=0;i<this.rocks.length;i++){var j=this.rocks[i];if(this.hitRock(this.ship,j)){this.explodeShip(this.ship);this.changeState(this.END_LIFE)}if(this.bulletHitRock(j)){this.explodeRock(j)}}this.gameLayer.render();if(!this.rocksLeft()){this.changeState(this.END_LEVEL)}break;case"exit":this.stopTimer();break;default:this.INTERACTIVE(k)}},END_LIFE:function(j){var i=this;switch(j){case"enter":this.startTimer();setTimeout(function(){i.changeState(i.START_LIFE)},5000);break;case"tick":this.reset();this.gameLayer.update();this.gameLayer.render();break;case"exit":this.gameLayer.remove(this.shipFragments);break;default:this.BASE(j)}}})}());
